import React, { useState, useEffect } from 'react';
import {
  Alert,FlatList,SafeAreaView,ScrollView,
  StatusBar,StyleSheet,Text,TextInput,
  TouchableOpacity,useColorScheme,View,Image,
} from 'react-native';
import PushNotification from 'react-native-push-notification';
const App = ()=>{
//     PushNotification.localNotification({
//         /* Android Only Properties */
//         channelId: "channel-id-1", // (required) channelId, if the channel doesn't exist, notification will not trigger.
//         ticker: "My Notification Ticker", // (optional)
//         showWhen: true, // (optional) default: true
//         autoCancel: true, // (optional) default: true
//         largeIcon: "ic_launcher", // (optional) default: "ic_launcher". Use "" for no large icon.
//         largeIconUrl: "https://www.example.tld/picture.jpg", // (optional) default: undefined
//         smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher". Use "" for default small icon.
//         bigText: "حاجی دارو یادت نره", // (optional) default: "message" prop
//         // subText: "This is a subText", // (optional) default: none
//         bigPictureUrl: "https://www.example.tld/picture.jpg", // (optional) default: undefined
//         bigLargeIcon: "ic_launcher", // (optional) default: undefined
//         bigLargeIconUrl: "https://www.example.tld/bigicon.jpg", // (optional) default: undefined
//         color: "red", // (optional) default: system default
//         vibrate: true, // (optional) default: true
//         vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
//         tag: "some_tag", // (optional) add tag to message
//         group: "group", // (optional) add group to message
//         groupSummary: false, // (optional) set this notification to be the group summary for a group of notifications, default: false
//         ongoing: false, // (optional) set whether this is an "ongoing" notification
//         priority: "high", // (optional) set notification priority, default: high
//         visibility: "private", // (optional) set notification visibility, default: private
//         ignoreInForeground: false, // (optional) if true, the notification will not be visible when the app is in the foreground (useful for parity with how iOS notifications appear). should be used in combine with `com.dieam.reactnativepushnotification.notification_foreground` setting
//         shortcutId: "shortcut-id", // (optional) If this notification is duplicative of a Launcher shortcut, sets the id of the shortcut, in case the Launcher wants to hide the shortcut, default undefined
//         onlyAlertOnce: false, // (optional) alert will open only once with sound and notify, default: false
        
//         when: null, // (optional) Add a timestamp (Unix timestamp value in milliseconds) pertaining to the notification (usually the time the event occurred). For apps targeting Build.VERSION_CODES.N and above, this time is not shown anymore by default and must be opted into by using `showWhen`, default: null.
//         usesChronometer: false, // (optional) Show the `when` field as a stopwatch. Instead of presenting `when` as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call), default: false.
//         timeoutAfter: null, // (optional) Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled, default: null
      
//         messageId: "google:message_id", // (optional) added as `message_id` to intent extras so opening push notification can find data stored by @react-native-firebase/messaging module. 
      
//         actions: ["اوکی"], // (Android only) See the doc for notification actions to know more
//         invokeApp: false, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true
      
//         /* iOS only properties */
//         category: "", // (optional) default: empty string
//         subtitle: "My Notification Subtitle", // (optional) smaller title below notification title
      
//         /* iOS and Android properties */
//         id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
//         title: "یادآوری", // (optional)
//         message: "یادآوری", // (required)
//         picture: "https://www.example.tld/picture.jpg", // (optional) Display an picture with the notification, alias of `bigPictureUrl` for Android. default: undefined
//         userInfo: {}, // (optional) default: {} (using null throws a JSON value '<null>' error)
//         playSound: false, // (optional) default: true
//         soundName: "default", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
//         number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
//         repeatType: "minute", // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
//       });
    
    //   PushNotification.localNotification({
    //     foreground: false, // BOOLEAN: If the notification was received in foreground or not
    //     userInteraction: false, // BOOLEAN: If the notification was opened by the user from the notification area or not
    //     message: 'My Notification Message', // STRING: The notification message
    //     data: {}, // OBJECT: The push data or the defined userInfo in local notifications
    // })

    // PushNotification.localNotificationSchedule({
    //   channelId: "channel-id-1",
    //   repeatType: 'day',
    //   //... You can use all the options from localNotifications
    //   message: "Don't forget daily report", // (required)
    //   date: new Date(Date.now() + 5 * 1000), // in 60 secs
    //   allowWhileIdle: false, // (optional) set notification to work while on doze, default: false
    //   /* Android Only Properties */
    //   repeatTime: 0, // (optional) Increment of configured repeatType. Check 'Repeating Notifications' section for more info.
    //   showWhen:true,
    //   when: null,
    //   hour: 11,
    //   minute: 12,
    // });


    // PushNotification.createChannel(
    //     {
    //       channelId: "channel-id-1",
    //       channelName: "My channel",
    //       channelDescription: "A channel to categorise your notifications",
    //       playSound: false, 
    //       soundName: "default",
    //       vibrate: true, 
           
    //     },
    //     (created) => console.log(`createChannel returned '${created}'`) 
    //     );

   
    // PushNotification.localNotificationSchedule({
    //   channelId: "channel-id-1",
    //   repeatType: 'day',
    //   //... You can use all the options from localNotifications
    //   message: "گزارش روزانه را یادتان نرود!", // (required)
    //   date: new Date(), // in 60 secs
    //   allowWhileIdle: false, // (optional) set notification to work while on doze, default: false
    //   /* Android Only Properties */
    //   //repeatTime: 1, // (optional) Increment of configured repeatType. Check 'Repeating Notifications' section for more info.
    // });

// PushNotification.createChannel(
//         {
//           channelId: "DailyReminder",
//           channelName: "My channel",
//           channelDescription: "A channel to categorise your DailyReminder",
//           playSound: false, 
//           soundName: "default",
//           vibrate: true,    
//         },
//         (created) => console.log(`DailyReminder => createChannel returned '${created}'`) 
//         );

        //PushNotification.removeAllDeliveredNotifications();

        //  
          // PushNotification.localNotificationSchedule({
          //   channelId: "channel-id-1",
          //   message: 'Added Daily News',
          //   date: new Date("2021-09-29T13:00:00"),
          //   repeatType: 'day',
          // });
        

        
    return(
        <Text>Hi</Text>
    
        
    );
}
export default App;